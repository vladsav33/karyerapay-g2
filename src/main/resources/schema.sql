CREATE TABLE IF NOT EXISTS users
(
    user_id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    nickname   VARCHAR(20)                             NOT NULL,
    email      VARCHAR(30)                             NOT NULL,
    password   VARCHAR(130)                            NOT NULL,
    role       VARCHAR(10)                             NOT NULL,
    created_on TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (user_id),
    CONSTRAINT uq_user_email UNIQUE (email),
    CONSTRAINT uq_user_nickname UNIQUE (nickname)
);
CREATE TABLE IF NOT EXISTS avatars
(
    avatar_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name      VARCHAR(20)                             NOT NULL,
    image     BYTEA,
    user_id   BIGINT                                  NOT NULL,
    CONSTRAINT pk_avatars PRIMARY KEY (avatar_id),
    CONSTRAINT uq_avatar_name UNIQUE (name),
    CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE

);
CREATE TABLE IF NOT EXISTS games
(
    game_id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(100)                            NOT NULL,
    description VARCHAR(2500)                           NOT NULL,
    is_Alive    BOOLEAN,
    admin_id    BIGINT                                  NOT NULL,
    created_on  TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_games PRIMARY KEY (game_id),
    CONSTRAINT fk_admin_id FOREIGN KEY (admin_id) REFERENCES users (user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT uq_games_name UNIQUE (name)
);
CREATE TABLE IF NOT EXISTS accounts
(
    account_id      BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    game_id         BIGINT                                  NOT NULL,
    type_Of_Account VARCHAR(50)                             NOT NULL,
    name            VARCHAR(100)                            NOT NULL,
    user_id         BIGINT                                  NOT NULL,
    amount          NUMERIC(14, 2)                          NOT NULL,
    is_Locked       BOOLEAN                                 NOT NULL,
    CONSTRAINT pk_accounts PRIMARY KEY (account_id),
    CONSTRAINT fk_accounts_game_id FOREIGN KEY (game_id) REFERENCES games (game_id) ON DELETE CASCADE,
    CONSTRAINT fk_account_user_id FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE,
    CONSTRAINT uq_account UNIQUE (user_id, type_Of_Account),
    CONSTRAINT accounts_amount CHECK ( amount >= 0 )
);
CREATE TABLE IF NOT EXISTS payments
(
    payments_id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    game_id         BIGINT                                  NOT NULL,
    account_id_from BIGINT                                  NOT NULL,
    account_id_to   BIGINT                                  NOT NULL,
    amount          NUMERIC(14, 2)                          NOT NULL,
    description     VARCHAR(500)                            NOT NULL,
    created_on      TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_payments PRIMARY KEY (payments_id),
    CONSTRAINT fk_payments_game_id FOREIGN KEY (game_id) REFERENCES games (game_id),
    CONSTRAINT fk_account_id_from FOREIGN KEY (account_id_from) REFERENCES accounts (account_id),
    CONSTRAINT fk_account_id_to FOREIGN KEY (account_id_to) REFERENCES accounts (account_id),
    CONSTRAINT payments_amount CHECK ( amount >= 0 )
);
CREATE TABLE IF NOT EXISTS created_games
(
    game_id         BIGINT  NOT NULL,
    user_id         BIGINT  NOT NULL,
    type_Of_Account VARCHAR NOT NULL,
    CONSTRAINT pk_created_games PRIMARY KEY (game_id, user_id, type_Of_Account),
    CONSTRAINT fk_created_games_game_id FOREIGN KEY (game_id) REFERENCES games (game_id),
    CONSTRAINT fk_created_games_user_id FOREIGN KEY (user_id) REFERENCES users (user_id)
);
CREATE TABLE IF NOT EXISTS start_amounts
(
    game_id         BIGINT         NOT NULL,
    type_Of_Account VARCHAR        NOT NULL,
    start_Amount    NUMERIC(14, 2) NOT NULL,
    CONSTRAINT pk_start_amounts PRIMARY KEY (game_id, type_Of_Account),
    CONSTRAINT fk_start_amounts_game_id FOREIGN KEY (game_id) REFERENCES games (game_id),
    CONSTRAINT start_amounts CHECK ( start_Amount >= 0 )
);